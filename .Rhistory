mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == `Rates_Per 1,000  live births_Childhood deaths_Neonatal`, 0, 1)) %>%
mutate(early_check = ifelse(`Rates_Per 1,000  live births_Childhood deaths_Early` == Rates_Early_neonatal, 0, 1))
check_rate_calcs[1, 1]
check_rate_calcs <- late_neonatal %>%
mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == `Rates_Per 1,000  live births_Childhood deaths_Neonatal`, 0, 1))
check_rate_calcs
check_rate_calcs <- late_neonatal %>%
mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == `Rates_Per 1,000  live births_Childhood deaths_Neonatal`, 0, 1)) %>%
summarise(check_rate_calcs = sum(rate_calcs_comparison, na.rm = TRUE))
check_rate_calcs
nrow(late_neonatal)
if(check_rate_calcs_pass == FALSE){
print(paste("check of rate caclulations has failed.",
check_rate_calcs[1, 1], "of", nrow(late_neonatal), "neonatal death rates do not match.",
"Calculations performed in the block of code where 'late_neonatal' is created."))
}
names(late_neonatal)
late_neonatal <- headings_standardised %>%
mutate(Numbers_Deaths_Late_neonatal = `Numbers_NA_Deaths under 1_Neonatal` - `Numbers_NA_Deaths under 1_Early`) %>%
mutate(Rates_Late_neonatal = ifelse(Numbers_Deaths_Late_neonatal > 3,
round(Numbers_Deaths_Late_neonatal / (`Numbers_NA_Births_Live births` / 1000), 1), # calculating late neonatal
NA),
# overall neonatal rates are calculated already in the download, so we can check our calcs against these
Rates_Neonatal_check = ifelse(`Numbers_NA_Deaths under 1_Neonatal` > 3,
round(`Numbers_NA_Deaths under 1_Neonatal` / (`Numbers_NA_Births_Live births` / 1000), 1),
NA))
check_rate_calcs <- late_neonatal %>%
mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == `Rates_Per 1,000  live births_Childhood deaths_Neonatal`, 0, 1)) %>%
summarise(check_rate_calcs = sum(rate_calcs_comparison, na.rm = TRUE))
names(late_neonatal)
data_in_csv_format <- late_neonatal %>%
select(country, sex,
`Rates_Per 1,000  live births_Childhood deaths_Early`,
Rates_Late_neonatal,
`Rates_Per 1,000  live births_Childhood deaths_Neonatal`) %>%
pivot_longer(
cols = starts_with("Rates"),
names_to = "Neonatal_period",
values_to = "Value")
View(data_in_csv_format)
names(data_in_csv_format)
unique(data_in_csv_format$Neonatal_period)
unique(data_in_csv_format$sex)
rm(list = ls())
library(tidyr)
library(dplyr)
library(tidyxl)
library(unpivotr)
library(stringr)
setwd("H:\\Coding_repos\\3-2-2_update\\") # you should not need to edit this
filename <- "Input/cms2018workbookf.xlsx"
birthweight_by_mum_age_tab_name <- "Table 10"
first_header_row_birthweight_by_mum_age <- 4
country_of_occurrence_by_sex_tab_name <- "Table 2"
first_header_row_country_by_sex <- 4
# source(paste0(filepath,"basic_checks_and_setup.R"))
source(paste0(filepath,"birthweight_by_mum_age_function.R"))
# source(paste0(filepath,"basic_checks_and_setup.R"))
source("birthweight_by_mum_age_function.R")
# run_basic_checks_and_setup()
get_birthweight_by_mother_age_for_csv()
# run_basic_checks_and_setup()
get_birthweight_by_mother_age_for_csv()
filename
getwd()
rm(list = ls())
setwd("H:\\Coding_repos\\3-2-2_update\\") # you should not need to edit this
filename <- "Input/cms2018workbookf.xlsx"
birthweight_by_mum_age_tab_name <- "Table 10"
first_header_row_birthweight_by_mum_age <- 4
country_of_occurrence_by_sex_tab_name <- "Table 2"
first_header_row_country_by_sex <- 4
# source(paste0(filepath,"basic_checks_and_setup.R"))
source("birthweight_by_mum_age_function.R")
# run_basic_checks_and_setup()
get_birthweight_by_mother_age_for_csv()
source("functions.R")
getwd()
source("functions.R")
setwd("H:\\Coding_repos\\3-2-2_update\\") # you should not need to edit this
source("functions.R")
source_data <- xlsx_cells(filename, sheets = birthweight_by_mum_age_tab_name)
print(paste("reading in", filename, "from", getwd()))
possible_geographies <- c("England", "Wales", "Scotland", "Northern Ireland", "UK", "United Kingdom")
print("getting country and year")
info_cells <- source_data %>%
filter(row %in% 1:(first_header_row_birthweight_by_mum_age - 1)) %>%
distinct(character) %>%
filter(!is.na(character)) %>%
mutate(character = trimws(character,  which = "both")) %>%
mutate(Year = ifelse(substr(character, nchar(character) - 3, nchar(character) - 2) == "20",
substr(character, nchar(character) - 3, nchar(character)),
NA)) %>%
mutate(Country = ifelse(grepl(possible_geographies, character, fixed = TRUE), character, NA))
Years <- filter(info_cells, !is.na(Year)) %>%
select(Year)
Years_list <- as.list(unique(Years))
Countries <- filter(info_cells, !is.na(Country)) %>%
select(Country)
Countries_list <- as.list(unique(Countries))
if (length(Countries_list) > 1) {
print("Error: code has identified more than one geography. Please check that Country is correct in the output")
}
Country <- str_c(Countries_list, collapse = " ")
if (length(Years_list) > 1) {
print("Error: code has identified more than one year, where only one was expected. Please check that Year is correct in the output")
}
Year <- Years_list[[1]]
print("tidying data")
superscript_regex_codes <- "[\u{2070}\u{00B9}\u{00B2}\u{00B3}\u{2074}-\u{2079}]"
all_letters <-c(LETTERS, letters)
tidy_data <- source_data %>%
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub(superscript_regex_codes, '', character),
character)) %>% # because we dont want to keep superscripts
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub("[1-9]", '', character),
character)) %>%  # because sometimes superscripts seem to be read as just plain numbers
mutate(is_blank = ifelse(character == "" & data_type == "character", TRUE, is_blank)) %>%
filter(is_blank == FALSE & row %not_in% 1:(first_header_row_birthweight_by_mum_age - 1)) %>%
behead("left-up", birthweight) %>%
behead("left", mother_age) %>%
behead("up-left", measure) %>%
behead("up-left", event) %>%
behead("up", baby_age) %>%
filter(!is.na(numeric)) %>%
mutate(birthweight = trimws(birthweight,  which = "both")) %>%
mutate(birthweight = ifelse(birthweight == "4000 and" | birthweight == "over",
"4000 and over", birthweight)) %>%
select(birthweight, mother_age, measure, event, baby_age,
numeric)
source("functions.R")
tidy_data <- source_data %>%
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub(superscript_regex_codes, '', character),
character)) %>% # because we dont want to keep superscripts
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub("[1-9]", '', character),
character)) %>%  # because sometimes superscripts seem to be read as just plain numbers
mutate(is_blank = ifelse(character == "" & data_type == "character", TRUE, is_blank)) %>%
filter(is_blank == FALSE & row %not_in% 1:(first_header_row_birthweight_by_mum_age - 1)) %>%
behead("left-up", birthweight) %>%
behead("left", mother_age) %>%
behead("up-left", measure) %>%
behead("up-left", event) %>%
behead("up", baby_age) %>%
filter(!is.na(numeric)) %>%
mutate(birthweight = trimws(birthweight,  which = "both")) %>%
mutate(birthweight = ifelse(birthweight == "4000 and" | birthweight == "over",
"4000 and over", birthweight)) %>%
select(birthweight, mother_age, measure, event, baby_age,
numeric)
source("functions.R")
tidy_data <- source_data %>%
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub(superscript_regex_codes, '', character),
character)) %>% # because we dont want to keep superscripts
mutate(character = ifelse(substr(character, 1, 1) %in% all_letters,
gsub("[1-9]", '', character),
character)) %>%  # because sometimes superscripts seem to be read as just plain numbers
mutate(is_blank = ifelse(character == "" & data_type == "character", TRUE, is_blank)) %>%
filter(is_blank == FALSE & row %not_in% 1:(first_header_row_birthweight_by_mum_age - 1)) %>%
behead("left-up", birthweight) %>%
behead("left", mother_age) %>%
behead("up-left", measure) %>%
behead("up-left", event) %>%
behead("up", baby_age) %>%
filter(!is.na(numeric)) %>%
mutate(birthweight = trimws(birthweight,  which = "both")) %>%
mutate(birthweight = ifelse(birthweight == "4000 and" | birthweight == "over",
"4000 and over", birthweight)) %>%
select(birthweight, mother_age, measure, event, baby_age,
numeric)
data_for_calculations <- tidy_data %>%
pivot_wider(names_from = c(measure, baby_age, event),
values_from = numeric)
late_neonatal <- data_for_calculations %>%
mutate(Numbers_Late_neonatal_Deaths = Numbers_Neonatal_Deaths - Numbers_Early_Deaths) %>%
mutate(Rates_Late_neonatal_Deaths = ifelse(Numbers_Late_neonatal_Deaths > 3,
round(Numbers_Late_neonatal_Deaths / (`Numbers_Live births_Births` / 1000), 1), # calculating late neonatal
NA),
Rates_Early_neonatal_Deaths = ifelse(Numbers_Early_Deaths > 3,
round(Numbers_Early_Deaths / (`Numbers_Live births_Births` / 1000), 1), # calculating early neonatal
NA),
# overall neonatal rates are calculated already in the download, so we can check our calcs against these
Rates_Neonatal_check = ifelse(Numbers_Neonatal_Deaths > 3,
round(Numbers_Neonatal_Deaths / (`Numbers_Live births_Births` / 1000), 1),
NA))
check_rate_calcs <- late_neonatal %>%
mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == Rates_Neonatal_Deaths, 0, 1)) %>%
summarise(check_rate_calcs = sum(rate_calcs_comparison, na.rm = TRUE))
check_rate_calcs_pass <- ifelse(check_rate_calcs[1, 1] == 0, TRUE, FALSE)
if(check_rate_calcs_pass == FALSE){
print(paste("check of rate caclulations has failed. Check code where 'late_neonatal' is created"))
}
if (check_rate_calcs_pass == TRUE) {
print(paste("check of rate caclulations has passed: calculated neonatal rates match given neonatal rates")) # checking to see if the neonatal calculations have passed
data_in_csv_format <- late_neonatal %>%
select(birthweight, mother_age,
# Early_neonatal, Late_neonatal, Neonatal,
Rates_Early_neonatal_Deaths, Rates_Late_neonatal_Deaths, Rates_Neonatal_Deaths) %>%
pivot_longer(
cols = starts_with("Rates"),
names_to = "Neonatal_period",
values_to = "Value")
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = gsub("Rates_", "", Neonatal_period),
Neonatal_period = gsub("_Deaths", "", Neonatal_period),
Neonatal_period = gsub("_", " ", Neonatal_period),
Neonatal_period = ifelse(Neonatal_period == "Neonatal", "", Neonatal_period),
mother_age = gsub("-", " to ", mother_age),
mother_age = gsub("&", " and ", mother_age),
mother_age = gsub("<", "Less than ", mother_age),
mother_age = ifelse(mother_age == "Notstated", "Not stated", mother_age),
mother_age = ifelse(mother_age == "All", "", mother_age),
mother_age = trimws(mother_age,  which = "both"),
birthweight = gsub("-", " to ", birthweight),
birthweight = gsub("<", "Less than ", birthweight),
birthweight = ifelse(birthweight == "<", "Less than", birthweight),
birthweight = ifelse(birthweight == "Notstated", "Not stated", birthweight),
birthweight = ifelse(birthweight == "All", "", birthweight)) %>%
rename(`Neonatal period` = Neonatal_period,
Age = mother_age,
Birthweight = birthweight) %>%
mutate(Year = Year,
Sex = "",
Country = Country,
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
GeoCode = "K04000001",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
setwd('..')
setwd('./Output')
write.csv(clean_csv_data, paste0("birthweight_by_mother_age_for_csv_", Year, ".csv"), row.names = FALSE)
current_directory <- getwd()
print(paste0("Birthweight by mother age data have been created and formatted for ", Year, ", and saved in '", current_directory,
"' as 'birthweight_by_mother_age_for_csv_", year, ".csv'"))
}
getwd()
setwd('./Output')
setwd("H:\\Coding_repos\\3-2-2_update\\") # you should not need to edit this
setwd('./Output')
write.csv(clean_csv_data, paste0("birthweight_by_mother_age_for_csv_", Year, ".csv"), row.names = FALSE)
current_directory <- getwd()
print(paste0("Birthweight by mother age data have been created and formatted for ", Year, ", and saved in '", current_directory,
"' as 'birthweight_by_mother_age_for_csv_", year, ".csv'"))
Year
current_directory <- getwd()
print(paste0("Birthweight by mother age data have been created and formatted for ", Year, ", and saved in '", current_directory,
"' as 'birthweight_by_mother_age_for_csv_", Year, ".csv'"))
rm(list = ls())
source_data <- xlsx_cells(filename, sheets = country_of_occurrence_by_sex_tab_name)
info_cells <- get_info_cells(source_data)
working_directory <- "H:\\Coding_repos\\3-2-2_update\\" # you should not need to edit this
setwd(working_directory)
source_data <- xlsx_cells(filename, sheets = country_of_occurrence_by_sex_tab_name)
filename <- "Input/cms2018workbookf.xlsx"
birthweight_by_mum_age_tab_name <- "Table 10"
first_header_row_birthweight_by_mum_age <- 4
country_of_occurrence_by_sex_tab_name <- "Table 2"
first_header_row_country_by_sex <- 4
source_data <- xlsx_cells(filename, sheets = country_of_occurrence_by_sex_tab_name)
info_cells <- get_info_cells(source_data)
source("functions.R")
info_cells <- get_info_cells(source_data)
Year <- get_year(info_cells)
clean_data <- remove_superscripts_blanks_and_info_cells(source_data)
tidy_data <- clean_data %>%
behead("left-up", area_code) %>%
behead("left-up", country) %>%
behead("left", sex) %>%
behead("up-left", measure) %>%
behead("up-left", rate_type) %>%
behead("up-left", life_event_age) %>%
behead("up", baby_age) %>%
filter(!is.na(numeric)) %>% # to remove cells that are just ends of a header that have run on to the next row
mutate(country = trimws(country,  which = "both"),
sex = trimws(sex,  which = "both")) %>%
select(area_code, country, sex, measure, rate_type, life_event_age, baby_age,
numeric)
data_for_calculations <- tidy_data %>%
pivot_wider(names_from = c(measure, rate_type, life_event_age, baby_age),
values_from = numeric)
#### EDIT FROM HERE ####
# In 2018 data 'Numbers' heading hasn't been pulled all the way to the left, so Births aren't included under that heading.
if ("NA_NA_Births_Live births" %in% colnames(data_for_calculations)) {
headings_standardised <- rename(data_for_calculations, `Numbers_NA_Births_Live births` = `NA_NA_Births_Live births`)
} else {
headings_standardised <- data_for_calculations
}
late_neonatal <- headings_standardised %>%
mutate(Numbers_Deaths_Late_neonatal = `Numbers_NA_Deaths under 1_Neonatal` - `Numbers_NA_Deaths under 1_Early`) %>%
mutate(Rates_Late_neonatal = ifelse(Numbers_Deaths_Late_neonatal > 3,
round(Numbers_Deaths_Late_neonatal / (`Numbers_NA_Births_Live births` / 1000), 1), # calculating late neonatal
NA),
# overall neonatal rates are calculated already in the download, so we can check our calcs against these
Rates_Neonatal_check = ifelse(`Numbers_NA_Deaths under 1_Neonatal` > 3,
round(`Numbers_NA_Deaths under 1_Neonatal` / (`Numbers_NA_Births_Live births` / 1000), 1),
NA))
check_rate_calcs <- late_neonatal %>%
mutate(rate_calcs_comparison = ifelse(Rates_Neonatal_check == `Rates_Per 1,000  live births_Childhood deaths_Neonatal`, 0, 1)) %>%
summarise(check_rate_calcs = sum(rate_calcs_comparison, na.rm = TRUE))
check_rate_calcs_pass <- ifelse(check_rate_calcs[1, 1] == 0, TRUE, FALSE)
if(check_rate_calcs_pass == FALSE){
print(paste("check of rate caclulations has failed.",
check_rate_calcs[1, 1], "of", nrow(late_neonatal), "neonatal death rates do not match.",
"Calculations are performed in the block of code where 'late_neonatal' is created."))
} else {
print(paste("check of rate caclulations has passed: calculated neonatal rates match given neonatal rates")) # checking to see if the neonatal calculations have passed
data_in_csv_format <- late_neonatal %>%
select(country, sex,
`Rates_Per 1,000  live births_Childhood deaths_Early`,
Rates_Late_neonatal,
`Rates_Per 1,000  live births_Childhood deaths_Neonatal`) %>%
pivot_longer(
cols = starts_with("Rates"),
names_to = "Neonatal_period",
values_to = "Value")
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
setwd('..')
setwd('./Output')
write.csv(clean_csv_data, paste0("birthweight_by_mother_age_for_csv_", Year, ".csv"), row.names = FALSE)
current_directory <- getwd()
print(paste0("Birthweight by mother age data have been created and formatted for ", Year, ", and saved in '", current_directory,
"' as 'birthweight_by_mother_age_for_csv_", year, ".csv'"))
}
data_in_csv_format <- late_neonatal %>%
select(country, sex,
`Rates_Per 1,000  live births_Childhood deaths_Early`,
Rates_Late_neonatal,
`Rates_Per 1,000  live births_Childhood deaths_Neonatal`) %>%
pivot_longer(
cols = starts_with("Rates"),
names_to = "Neonatal_period",
values_to = "Value")
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
View(tidy_data)
data_in_csv_format <- late_neonatal %>%
select(country, sex, area_code,
`Rates_Per 1,000  live births_Childhood deaths_Early`,
Rates_Late_neonatal,
`Rates_Per 1,000  live births_Childhood deaths_Neonatal`) %>%
pivot_longer(
cols = starts_with("Rates"),
names_to = "Neonatal_period",
values_to = "Value")
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
Geocode = area_code
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex))
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country)
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country,
Geocode = area_code) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country,
Geocode = area_code)
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country,
Geocode = area_code) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value))
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country,
Geocode = area_code) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
clean_csv_data <- data_in_csv_format %>%
mutate(Neonatal_period = case_when(
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Early" ~ "Early neonatal",
Neonatal_period == "Rates_Late_neonatal" ~ "Late neonatal",
Neonatal_period == "Rates_Per 1,000  live births_Childhood deaths_Neonatal" ~ ""),
sex = ifelse(sex == "All", "", sex)) %>%
rename(`Neonatal period` = Neonatal_period,
Sex = sex,
Country = country,
GeoCode = area_code) %>%
mutate(Year = Year,
Birthweight = "",
Age = "",
Region = "",
`Health board` = "",
`Unit measure` = "Rate per 1,000 live births",
`Unit multiplier` = "Units",
`Observation status` = "Undefined",
Value = ifelse(is.na(Value), "", Value)) %>% # this turns the value into a character string
select(Year, Sex, Country, Region, `Health board`, Birthweight, Age, `Neonatal period`, `Unit measure`, `Unit multiplier`, `Observation status`, GeoCode, Value)
write.csv(clean_csv_data, paste0("country_by_sex_for_csv_", Year, ".csv"), row.names = FALSE)
current_directory <- getwd()
print(paste0("Country by sex data have been created and formatted for ", Year, ", and saved in '", current_directory,
"' as 'country_by_sex_for_csv_", Year, ".csv'"))
